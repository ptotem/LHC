<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title><%= get_content_for("siteTitle") %></title>
  <%= stylesheet_link_tag "application", media: "all", "data-turbolinks-track" => true %>
  <!--TODO: Why was this line here ?-->
  <!--<link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>-->
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <%= csrf_meta_tags %>
</head>
<%= js add_gritter(devise_error_messages!, :image => :error, :title => "Errors!", :sticky => false,:time => 10000  ,:position=>:bottom_left,:class_name => "gritter_style"  ) %>
<%= js add_gritter( flash[:alert] , :image => :error, :title => "Errors!", :sticky => false,:time => 10000  ,:position=>:bottom_left,:class_name => "gritter_style"  ) %>

<body>

<div id="fb-root"></div>
<script>
    window.fbAsyncInit = function () {
        FB.init({
            appId: '628824307167447',
            status: true, // check login status
            cookie: true, // enable cookies to allow the server to access the session
            xfbml: true  // parse XFBML
        });

        // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
        // for any authentication related change, such as login, logout or session refresh. This means that
        // whenever someone who was previously logged out tries to log in again, the correct case below
        // will be handled.
        FB.Event.subscribe('auth.authResponseChange', function (response) {
            // Here we specify what we do with the response anytime this event occurs.
            if (response.status === 'connected') {
                // The response object is returned with a status field that lets the app know the current
                // login status of the person. In this case, we're handling the situation where they
                // have logged in to the app.
                console.log("b4 calling testAPI(), response.authResponse.userID :- " + response.authResponse.userID);
                testAPI();
            } else if (response.status === 'not_authorized') {
                // In this case, the person is logged into Facebook, but not into the app, so we call
                // FB.login() to prompt them to do so.
                // In real-life usage, you wouldn't want to immediately prompt someone to login
                // like this, for two reasons:
                // (1) JavaScript created popup windows are blocked by most browsers unless they
                // result from direct interaction from people using the app (such as a mouse click)
                // (2) it is a bad experience to be continually prompted to login upon page load.
                FB.login();
            } else {
                // In this case, the person is not logged into Facebook, so we call the login()
                // function to prompt them to do so. Note that at this stage there is no indication
                // of whether they are logged into the app. If they aren't then they'll see the Login
                // dialog right after they log in to Facebook.
                // The same caveats as above apply to the FB.login() call here.
                FB.login();
            }
        });
    };

    // Load the SDK asynchronously
    (function (d) {
        var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
        if (d.getElementById(id)) {
            return;
        }
        js = d.createElement('script');
        js.id = id;
        js.async = true;
        js.src = "//connect.facebook.net/en_US/all.js";
        ref.parentNode.insertBefore(js, ref);
    }(document));

    // Here we run a very simple test of the Graph API after login is successful.
    // This testAPI() function is only called in those cases.
    function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function (response) {
            console.log('Good to see you, ' + response.name + '.');
        });
        console.log("myCheck() called from testAPI()");
        myCheck();
    }

    function myCheck() {
        FB.getLoginStatus(function (response) {
            if (response.status === 'connected') {
                // the user is logged in and has authenticated your
                // app, and response.authResponse supplies
                // the user's ID, a valid access token, a signed
                // request, and the time the access token
                // and signed request each expire
                var uid = response.authResponse.userID;
                var accessToken = response.authResponse.accessToken;
                console.log("uid :- " + uid);
            } else if (response.status === 'not_authorized') {
                // the user is logged in to Facebook,
                // but has not authenticated your app
            } else {
                // the user isn't logged in to Facebook.
            }
        });
    }
</script>

<!--
  Below we include the Login Button social plugin. This button uses the JavaScript SDK to
  present a graphical Login button that triggers the FB.login() function when clicked. -->

<!--<fb:login-button show-faces="true" width="200" max-rows="1"></fb:login-button>-->

<%= render "generic_partials/topbar" %>

<!--Header Section-->
<section id="header">
  <div class="custom-container">
    <div class="row">
      <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <%#= js add_gritter(devise_error_messages!, :image => :error, :title => "Errors!", :sticky => false,:time => 10000  ,:position=>:bottom_left,:class_name => "gritter_style"  ) %>

        <!--BxSlider-->
        <ul class="bxslider">
          <li id="bx-li-image1" style="height: 560px; width: 100%;">
            <div class="row text-center" style="padding-top: 4%;">
              <div class="col-xs-12 col-sm-6 col-sm-offset-6 col-md-5 col-md-offset-6 col-lg-5 col-lg-offset-6 text-center" style="background-color: #000000; opacity: 0.65; color: #ffffff; padding: 1% 0% 2% 0%;">
                <% if params[:controller]!="devise/passwords" %>
                    <div class="row">
                      <div class="col-xs-6 col-sm-6 col-sm-offset-6 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4 text-center">
                        <h5 class="white" style="position: relative">
                          <span id="sign_up_with_text">Sign up with</span>
                          <!--<a class="facebook" href="/users/auth/facebook" target="_self">-->
                          <a class="facebook" href="#" data-toggle="modal" data-target="#functionality_coming_soon_Modal">
                            <i class="fa fa-facebook fa-3x blue"></i>
                          </a>
                        </h5>
                        <h5 class="white" id="sign_up_or_text">
                          OR
                        </h5>
                      </div>
                    </div>
                <% end %>
                <%= yield %>
              </div>
            </div>
          </li>

          <li id="bx-li-image2" style="height: 560px; width: 100%;">
            <div class="row text-center" style="padding-top: 4%;" id="sign_up_sign_in_transparent_block">
              <div class="col-xs-12 col-sm-6 col-sm-offset-6 col-md-5 col-md-offset-6 col-lg-5 col-lg-offset-6 text-center" style="background-color: #000000; opacity: 0.65; color: #ffffff; padding: 1% 0% 2% 0%;">

                <% if params[:controller]!="devise/passwords" %>
                    <div class="row">
                      <div class="col-xs-6 col-sm-6 col-sm-offset-6 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4 text-center">
                        <h5 class="white" style="position: relative">
                          <span id="sign_up_with_text">Sign up with</span>
                          <!--<a class="facebook" href="/users/auth/facebook" target="_self">-->
                          <a class="facebook" href="#" data-toggle="modal" data-target="#functionality_coming_soon_Modal">
                            <i class="fa fa-facebook fa-3x blue"></i>
                          </a>
                        </h5>
                        <h5 class="white" id="sign_up_or_text">OR</h5>
                      </div>
                    </div>
                <% end %>

                <%= yield %>
              </div>
            </div>
          </li>
        </ul>

      </div><!--End Span12-->
    </div>
  </div>

</section>

<div class="modal fade" id="functionality_coming_soon_Modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title blue" id="myModalLabel">Let's Have Coffee!!!</h4>
      </div>
      <div class="modal-body">
        <p class="blue">Functionality coming soon...</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!--Sifting partials to a different directory is a matter of choice. Nothing wrong in keeeping everything in layouts folder, but this is slightly more cleaner approach.-->

<%= render "generic_partials/three_cols_desc_section" %>

<%= render "generic_partials/icons_section" %>

<%= render "generic_partials/message_section" %>

<%= render "generic_partials/bottom_section" %>
<%#= js add_gritter(flash[:notice], :image => '/assets/bulb_48_48.png', :title => "Notification!", :sticky => false,:time => 10000  ,:position=>:bottom_left,:class_name => "gritter_style"  ) %>
</body>

<!--<script src="js/jquery.bxslider.min.js"></script>-->

<!--BxSlider - Animation options (horizontal, vertical, or fade) For full list of options check out www.bxslider.com -->
<script>
    $(document).ready(function(){
        $('.bxslider').bxSlider({
            mode: 'fade',
            auto: false,
            pause: 4000,
            autoHover: false,
            touchEnabled: true,
            adaptiveHeight: false,
            autoControls: false,
            controls: false
        });
//        window.scrollTo(0, 0);
//        TODO: check if anything goes because of this, remove
        $('.chosen-container').find('.chosen-results').css("height","120px");

    });
</script>


<script type="text/javascript">


    $( document ).ready(function() {
        setTimeout(function(){
            window.scrollTo(0,0);
        },2000);
        //$("#bx-li-image1").css("background-image",'url(<%#= get_image_from_content('landingBkg1')%>)')
        $("#bx-li-image1").css("background",'url(<%= get_image_from_content('landingBkg1')%>)')
        $("#bx-li-image2").css("background-image",'url(<%= get_image_from_content('landingBkg2')%>)')
    });

</script>

</html>
