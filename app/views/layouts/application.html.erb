<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title><%= get_content_for("siteTitle") %></title>
  <%= stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true %>
  <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <%= csrf_meta_tags %>
</head>
<body>

<div id="fb-root"></div>
<script>
    window.fbAsyncInit = function() {
        FB.init({
            appId      : '628824307167447',
            status     : true, // check login status
            cookie     : true, // enable cookies to allow the server to access the session
            xfbml      : true  // parse XFBML
        });

        // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
        // for any authentication related change, such as login, logout or session refresh. This means that
        // whenever someone who was previously logged out tries to log in again, the correct case below
        // will be handled.
        FB.Event.subscribe('auth.authResponseChange', function(response) {
            // Here we specify what we do with the response anytime this event occurs.
            if (response.status === 'connected') {
                // The response object is returned with a status field that lets the app know the current
                // login status of the person. In this case, we're handling the situation where they
                // have logged in to the app.
                console.log("b4 calling testAPI(), response.authResponse.userID :- " + response.authResponse.userID);
                testAPI();
            } else if (response.status === 'not_authorized') {
                // In this case, the person is logged into Facebook, but not into the app, so we call
                // FB.login() to prompt them to do so.
                // In real-life usage, you wouldn't want to immediately prompt someone to login
                // like this, for two reasons:
                // (1) JavaScript created popup windows are blocked by most browsers unless they
                // result from direct interaction from people using the app (such as a mouse click)
                // (2) it is a bad experience to be continually prompted to login upon page load.
                FB.login();
            } else {
                // In this case, the person is not logged into Facebook, so we call the login()
                // function to prompt them to do so. Note that at this stage there is no indication
                // of whether they are logged into the app. If they aren't then they'll see the Login
                // dialog right after they log in to Facebook.
                // The same caveats as above apply to the FB.login() call here.
                FB.login();
            }
        });
    };

    // Load the SDK asynchronously
    (function(d){
        var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement('script'); js.id = id; js.async = true;
        js.src = "//connect.facebook.net/en_US/all.js";
        ref.parentNode.insertBefore(js, ref);
    }(document));

    // Here we run a very simple test of the Graph API after login is successful.
    // This testAPI() function is only called in those cases.
    function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function(response) {
            console.log('Good to see you, ' + response.name + '.');
        });
        console.log("myCheck() called from testAPI()");
        myCheck();
    }

    function myCheck(){
        FB.getLoginStatus(function(response) {
            if (response.status === 'connected') {
                // the user is logged in and has authenticated your
                // app, and response.authResponse supplies
                // the user's ID, a valid access token, a signed
                // request, and the time the access token
                // and signed request each expire
                var uid = response.authResponse.userID;
                var accessToken = response.authResponse.accessToken;
                console.log("uid :- " + uid);
            } else if (response.status === 'not_authorized') {
                // the user is logged in to Facebook,
                // but has not authenticated your app
            } else {
                // the user isn't logged in to Facebook.
            }
        });
    }
</script>

<!--
  Below we include the Login Button social plugin. This button uses the JavaScript SDK to
  present a graphical Login button that triggers the FB.login() function when clicked. -->

<!--<fb:login-button show-faces="true" width="200" max-rows="1"></fb:login-button>-->

<%= render "generic_partials/topbar" %>

<%= yield %>


<!--About Content-->
<!--<section id="blue-container">-->
  <!--<div class="container">-->
    <!--<div class="row">-->

      <!--<div class="col-md-6 margin-30">-->
        <!--<h3>Here is why we are so amazing!</h3>-->
        <!--<p class="lead">Vestibulum non turpis sed diam volutpat scelerisque.</p>-->
        <!--<p class="white">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pretium diam quis ante scelerisque interdum. Praesent non orci nunc. Nulla sit amet felis in nibh ultricies blandit vel vitae ipsum. Aenean at dolor arcu, a commodo metus. In purus purus, egestas a hendrerit non, euismod ut tortor. Maecenas placerat nunc at eros tincidunt sagittis. Quisque facilisis dapibus ullamcorper. Phasellus ac mauris libero, vel placerat felis. Vestibulum non turpis sed diam volutpat scelerisque.</p>-->
        <!--<p class="white">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pretium diam quis ante scelerisque interdum. Praesent non orci nunc. Nulla sit amet felis in nibh ultricies blandit vel vitae ipsum.</p>-->
      <!--</div>-->

      <!--<div class="col-md-6 text-center">-->
        <!--<img src="img/about-img.png" class="img-responsive" alt="Title">-->
      <!--</div>-->

    <!--</div>-->
  <!--</div>-->
<!--</section>-->


<section id="footer" style="background-color: #FFFFFF">
  <div class="container">
    <div class="row">
      <div class="col-md-12 text-center">
        <p></p>
      </div>
    </div>
  </div>
</section>

</body>
</html>
